<?php
/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ª—É–Ω–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –∫–æ–º–Ω–∞—Ç–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π
 */

class HMC_Core {
    
    private static $instance = null;
    private $calculation_cache = [];
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    const LUNAR_MONTH = 29.530588853;
    const NEW_MOON_2000 = 2451550.26;
    
    // –î–∞–Ω–Ω—ã–µ —Ñ–∞–∑ –ª—É–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    private $moon_phases = [
        'new-moon' => ['name' => '–ù–æ–≤–æ–ª—É–Ω–∏–µ', 'icon' => 'üåë', 'type' => 'new'],
        'waxing-crescent' => ['name' => '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', 'icon' => 'üåí', 'type' => 'waxing'],
        'first-quarter' => ['name' => '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å', 'icon' => 'üåì', 'type' => 'waxing'],
        'waxing-gibbous' => ['name' => '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', 'icon' => 'üåî', 'type' => 'waxing'],
        'full-moon' => ['name' => '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ', 'icon' => 'üåï', 'type' => 'full'],
        'waning-gibbous' => ['name' => '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞', 'icon' => 'üåñ', 'type' => 'waning'],
        'last-quarter' => ['name' => '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å', 'icon' => 'üåó', 'type' => 'waning'],
        'waning-crescent' => ['name' => '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞', 'icon' => 'üåò', 'type' => 'waning']
    ];
    
    public static function instance() {
        if (is_null(self::$instance)) {
            self::$instance = new self();
        }
        return self::$instance;
    }
    
    private function __construct() {
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
        add_action('wp_enqueue_scripts', [$this, 'enqueue_assets']);
    }
    
    public function enqueue_assets() {
        if (apply_filters('hmc_load_styles', true)) {
            wp_add_inline_style('wp-block-library', $this->get_css());
        }
    }
    
    private function get_css() {
        return "
        .hmc-moon-phase {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            border-left: 4px solid #28a745;
        }
        .hmc-phase-simple {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 6px 12px;
            background: #e8f5e8;
            border-radius: 20px;
            font-size: 14px;
        }
        .hmc-plant-tips {
            background: white;
            border-radius: 8px;
            padding: 15px;
            border: 1px solid #e0e0e0;
            margin: 15px 0;
        }
        .hmc-tip {
            color: #28a745;
            margin: 5px 0;
            font-size: 14px;
        }
        .hmc-moon-icon {
            font-size: 20px;
        }
        .hmc-phase-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 10px;
        }
        ";
    }
    
    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
     */
    public function get_moon_data($date = null) {
        $timestamp = $this->normalize_timestamp($date);
        $date_key = date('Y-m-d', $timestamp);
        
        // In-memory cache
        if (isset($this->calculation_cache[$date_key])) {
            return $this->calculation_cache[$date_key];
        }
        
        // Transient cache –Ω–∞ 24 —á–∞—Å–∞
        $cache_key = 'hmc_data_' . $date_key;
        $cached = get_transient($cache_key);
        
        if ($cached !== false) {
            $this->calculation_cache[$date_key] = $cached;
            return $cached;
        }
        
        // –†–∞—Å—á–µ—Ç –¥–∞–Ω–Ω—ã—Ö
        $moon_data = $this->calculate_moon_data($timestamp);
        
        // –ö—ç—à–∏—Ä—É–µ–º –Ω–∞ 24 —á–∞—Å–∞ (–¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è + –∑–∞–ø–∞—Å)
        $time_until_midnight = $this->get_seconds_until_midnight();
        set_transient($cache_key, $moon_data, $time_until_midnight + 3600); // +1 —á–∞—Å –∑–∞–ø–∞—Å–∞
        
        $this->calculation_cache[$date_key] = $moon_data;
        
        return $moon_data;
    }
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ in-memory –∫—ç—à–∞
     */
    public function clear_memory_cache() {
        $this->calculation_cache = [];
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥ –¥–æ –ø–æ–ª—É–Ω–æ—á–∏
     */
    private function get_seconds_until_midnight() {
        $now = current_time('timestamp');
        $midnight = strtotime('tomorrow 00:00:00');
        return $midnight - $now;
    }
    
    /**
     * –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á–µ—Ç –ª—É–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    private function calculate_moon_data($timestamp) {
        $year = (int) date('Y', $timestamp);
        $month = (int) date('n', $timestamp);
        $day = (int) date('j', $timestamp);
        
        $jd = $this->julian_date($year, $month, $day);
        $moon_age = $this->calculate_moon_age($jd);
        $lunar_day = $this->calculate_lunar_day($moon_age);
        $phase_data = $this->calculate_phase($moon_age);
        
        return [
            'day' => $lunar_day,
            'phase' => $phase_data['name'],
            'icon' => $phase_data['icon'],
            'is_waxing' => $phase_data['type'] === 'waxing',
            'is_waning' => $phase_data['type'] === 'waning',
            'date' => date('Y-m-d', $timestamp),
            'date_display' => date_i18n('d.m.Y', $timestamp),
            'care_tips' => $this->get_care_tips($lunar_day, $phase_data['type'])
        ];
    }
    
    /**
     * –†–∞—Å—á–µ—Ç —é–ª–∏–∞–Ω—Å–∫–æ–π –¥–∞—Ç—ã (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
     */
    private function julian_date($year, $month, $day) {
        if ($month <= 2) {
            $year--;
            $month += 12;
        }
        $a = floor($year / 100);
        $b = 2 - $a + floor($a / 4);
        return floor(365.25 * ($year + 4716)) + floor(30.6001 * ($month + 1)) + $day + $b - 1524.5;
    }
    
    /**
     * –†–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –ª—É–Ω—ã
     */
    private function calculate_moon_age($jd) {
        $days_since_new_moon = $jd - self::NEW_MOON_2000;
        $cycles = floor($days_since_new_moon / self::LUNAR_MONTH);
        $age = $days_since_new_moon - ($cycles * self::LUNAR_MONTH);
        return $age < 0 ? $age + self::LUNAR_MONTH : $age;
    }
    
    /**
     * –†–∞—Å—á–µ—Ç –ª—É–Ω–Ω–æ–≥–æ –¥–Ω—è
     */
    private function calculate_lunar_day($moon_age) {
        $day = floor($moon_age) + 1;
        return $day > 30 ? 1 : (int) $day;
    }
    
    /**
     * –†–∞—Å—á–µ—Ç —Ñ–∞–∑—ã –ª—É–Ω—ã
     */
    private function calculate_phase($moon_age) {
        $phase = $moon_age / self::LUNAR_MONTH;
        
        if ($phase < 0.03 || $phase >= 0.97) return $this->moon_phases['new-moon'];
        if ($phase < 0.22) return $this->moon_phases['waxing-crescent'];
        if ($phase < 0.28) return $this->moon_phases['first-quarter'];
        if ($phase < 0.47) return $this->moon_phases['waxing-gibbous'];
        if ($phase < 0.53) return $this->moon_phases['full-moon'];
        if ($phase < 0.72) return $this->moon_phases['waning-gibbous'];
        if ($phase < 0.78) return $this->moon_phases['last-quarter'];
        return $this->moon_phases['waning-crescent'];
    }
    
    /**
     * –°–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –¥–ª—è –∫–æ–º–Ω–∞—Ç–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π
     */
    private function get_care_tips($lunar_day, $phase_type) {
        $tips = [];
        
        // –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–∞–∑–∞–º
        if ($phase_type === 'waxing') {
            $tips[] = '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–µ—Å–∞–¥–∫–∏ —Ä–∞—Å—Ç–µ–Ω–∏–π';
            $tips[] = '–ú–æ–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –∂–∏–¥–∫–∏–µ —É–¥–æ–±—Ä–µ–Ω–∏—è';
            $tips[] = '–•–æ—Ä–æ—à–æ —É–∫–æ—Ä–µ–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–Ω–∫–∏';
            $tips[] = '–ü–æ–¥—Ö–æ–¥—è—â–∏–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø–æ—Å–∞–¥–∫–∏ –Ω–æ–≤—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π';
        } elseif ($phase_type === 'waning') {
            $tips[] = '–ü–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–µ–∑–∫–∏';
            $tips[] = '–ú–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π';
            $tips[] = '–•–æ—Ä–æ—à–æ —Ä—ã—Ö–ª–∏—Ç—å –ø–æ—á–≤—É';
            $tips[] = '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—Ö–∏—Ö –ª–∏—Å—Ç—å–µ–≤';
        }
        
        if ($phase_type === 'new') {
            $tips[] = '–î–∞–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è–º –æ—Ç–¥–æ—Ö–Ω—É—Ç—å';
            $tips[] = '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–∞–¥–∫–∞';
            $tips[] = '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ–ª–∏–≤';
        }
        
        if ($phase_type === 'full') {
            $tips[] = '–†–∞—Å—Ç–µ–Ω–∏—è –ø–æ–ª–Ω—ã —ç–Ω–µ—Ä–≥–∏–∏';
            $tips[] = '–ú–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç—Ä–∞–≤—ã';
            $tips[] = '–•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥–∫–æ—Ä–º–∫–∏';
        }
        
        // –°–æ–≤–µ—Ç—ã –ø–æ –ª—É–Ω–Ω—ã–º –¥–Ω—è–º
        $favorable_days = [2, 3, 6, 7, 8, 11, 12, 13, 16, 17, 21, 22, 26, 27];
        if (in_array($lunar_day, $favorable_days)) {
            $tips[] = '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏';
        }
        
        $unfavorable_days = [1, 5, 9, 15, 19, 25, 29, 30];
        if (in_array($lunar_day, $unfavorable_days)) {
            $tips[] = '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–π —É—Ö–æ–¥';
        }
        
        return array_slice($tips, 0, 3); // –ú–∞–∫—Å–∏–º—É–º 3 —Å–æ–≤–µ—Ç–∞
    }
    
    private function normalize_timestamp($date) {
        if (!$date) return current_time('timestamp');
        if (is_string($date)) {
            $timestamp = strtotime($date);
            return $timestamp ?: current_time('timestamp');
        }
        return $date;
    }
    
    /**
     * –®–æ—Ä—Ç–∫–æ–¥: —Ñ–∞–∑–∞ –ª—É–Ω—ã
     */
    public function shortcode_moon_phase($atts) {
        $atts = shortcode_atts([
            'date' => '',
            'simple' => 'false'
        ], $atts);
        
        $moon_data = $this->get_moon_data($atts['date']);
        
        if ($atts['simple'] === 'true') {
            return sprintf(
                '<span class="hmc-phase-simple">%s %s (–¥–µ–Ω—å %d)</span>',
                $moon_data['icon'],
                $moon_data['phase'],
                $moon_data['day']
            );
        }
        
        ob_start();
        ?>
        <div class="hmc-moon-phase">
            <div class="hmc-phase-header">
                <span class="hmc-moon-icon"><?php echo $moon_data['icon']; ?></span>
                <strong><?php echo $moon_data['phase']; ?></strong>
            </div>
            <p>–õ—É–Ω–Ω—ã–π –¥–µ–Ω—å: <?php echo $moon_data['day']; ?></p>
            <p><?php echo $moon_data['date_display']; ?></p>
        </div>
        <?php
        return ob_get_clean();
    }
    
    /**
     * –®–æ—Ä—Ç–∫–æ–¥: —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É
     */
    public function shortcode_plant_care_tips($atts) {
        $atts = shortcode_atts(['date' => ''], $atts);
        
        $moon_data = $this->get_moon_data($atts['date']);
        
        if (empty($moon_data['care_tips'])) {
            return '<p>–°–µ–≥–æ–¥–Ω—è —Ä–∞—Å—Ç–µ–Ω–∏—è–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö.</p>';
        }
        
        ob_start();
        ?>
        <div class="hmc-plant-tips">
            <strong>üå± –°–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É:</strong>
            <?php foreach ($moon_data['care_tips'] as $tip): ?>
                <div class="hmc-tip">‚úì <?php echo $tip; ?></div>
            <?php endforeach; ?>
        </div>
        <?php
        return ob_get_clean();
    }
}
?>